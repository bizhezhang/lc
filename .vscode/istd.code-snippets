{
	// Place your lc workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"generate all header files for c++ code": {
		"scope": "cpp",
		"prefix": "istd",
		"body": [
			"#include <bits/stdc++.h>",
            "using namespace std;",
            "$2"
		],
		"description": "common header files for c++ algorithm development"
	},

    "generate most common header files for c++ code": {
		"scope": "cpp",
		"prefix": "ccomm",
		"body": [
			"#include \"ccomm.h\"",
            "$2"
		],
		"description": "common header files for c++ algorithm development"
	},

    "generate starter": {
		"scope": "cpp",
		"prefix": "mcpp",
		"body": [
			"int main(int argc, char const *argv[])",
            "{",
            "    $0"    ,
            "    return 0;",
            "}"
		],
		"description": "common header files for c++ algorithm development"
	},

    "generate fast starter": {
		"scope": "cpp",
		"prefix": "fast",
		"body": [
            "#include \"ccomm.h\"",
            "",
			"int main(int argc, char const *argv[])",
            "{",
            "    $0"    ,
            "    return 0;",
            "}"
		],
		"description": "common header files for c++ algorithm development"
	}

    
}